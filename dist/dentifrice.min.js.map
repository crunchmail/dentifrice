{"version":3,"sources":["bootstrap-functions.js","bootstrap-init-editor.js"],"names":["iframeID","msgPrefix","msgPrefixLen","length","lang","target","dentifrice","settings","defaults","targetId","templateUrl","stylesUrl","configUrl","title","log","debug","hideTarget","anchorId","replaceAnchor","width","height","parseInt","window","outerHeight","locales","en","Please validate","fr","_initLang","userLang","navigator","language","userLanguage","logger","_debug","_","text","locale","_initSettings","options","option","hasOwnProperty","_findTarget","element","document","getElementById","_warn","_messageListener","event","isMessageForUs","msg","substr","data","value","_setupMessageListener","eventMethod","addEventListener","eventer","messageEvent","_showValidationAlert","iframe","divCheck","createElement","id","textContent","parentNode","insertBefore","rect","getBoundingClientRect","iframeTop","top","scrollTop","heightElement","offsetHeight","widthElement","offsetWidth","posTop","parseFloat","posLeft","style","cssText","scrollTo","setTimeout","removeChild","checkIfValidated","bootstrap","_info","_initEditor","init","_output","type","enabled","console","display","assetsUrlBase","replace","absTest","templateUrlEncoded","encodeURIComponent","stylesUrlEncoded","test","configUrlEncoded","bootstrapRoot","allScripts","getElementsByTagName","re","forEach","call","tag","src","getAttribute","match","exec","editorUrl","setAttribute","border","anchor","replaceChild","appendChild","nextSibling"],"mappings":"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","file":"dentifrice.min.js","sourcesContent":["// Copyright (c) 2015 Oasiswork.\n// All Rights Reserved.\n//\n// This Source Code Form is subject to the\n// terms of the Mozilla Public License, v. 2.0.\n// If a copy of the MPL was not distributed with this file,\n// You can obtain one at\n// http://mozilla.org/MPL/2.0/.\n\n/*\n* Globals variables\n*/\nvar iframeID     = 'dentifriceIframe',\n    msgPrefix    = '[Dentifrice]',\n    msgPrefixLen = msgPrefix.length,\n    lang         = 'en',\n    target;\n\n/*\n* Dentifrice Module\n*/\nvar dentifrice = (function () {\n  'use strict';\n\n  // Define some global variables and defaults\n  var\n    settings     = {},\n\n    defaults     = {\n      targetId       : 'dentifrice-textarea',\n      templateUrl    : null,\n      stylesUrl      : 'styles.html',\n      configUrl      : 'configuration.json',\n      title          : 'Dentifrice Newsletter',\n      lang           : null,\n      log            : true,\n      debug          : false,\n      hideTarget     : true,\n      anchorId       : null,\n      replaceAnchor  : false,\n      width          : 850,\n      height         : parseInt(window.outerHeight*0.8)\n    },\n\n    locales      = {\n      'en' : {\n        'Please validate' : 'Please validate your edition first !'\n      },\n      'fr' : {\n        'Please validate' : \"Veuillez valider l'Ã©diteur !\"\n      }\n    };\n\n  /**\n   * Initialize language to, in order of preference :\n   *   - language provided in settings\n   *   - browser language\n   *   - defaults to 'en'\n   */\n  var _initLang = function () {\n    var userLang = navigator.language || navigator.userLanguage;\n    if ( settings.lang && (settings.lang in locales) ) {\n      lang = settings.lang;\n    } else if ( userLang in locales) {\n      lang = userLang;\n    }\n    logger._debug('Setting locale to: ' + lang);\n  };\n\n  /**\n   * Returns the translated string matching \"text\" parameter\n   */\n  var _ = function (text) {\n    var locale = locales[lang];\n    return ( text in locale ? locale[text] : text );\n  };\n\n  /**\n   * Initialize settings from provided dictionnary\n   */\n  var _initSettings = function (options) {\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option)) {\n        settings[option] = options.hasOwnProperty(option) ? options[option] : defaults[option];\n      }\n    }\n  };\n\n  /**\n   * Find the element where the generated HTML is to be pushed to\n   */\n  var _findTarget = function () {\n    var element = document.getElementById(settings.targetId);\n    if ( !element || 0 === element.length) {\n      logger._warn('Could not find element with ID: ' + settings.targetId);\n      return false;\n    } else {\n      logger._debug('Found element matching selector: ' + settings.targetId);\n      return element;\n    }\n  };\n\n  /**\n   * Callback listener for postMessages\n   */\n  var _messageListener = function (event) {\n\n    function isMessageForUs () {\n      return msgPrefix === (('' + msg).substr(0,msgPrefixLen));\n    }\n\n    var msg = event.data;\n    if(msg.length > 0 && typeof msg === 'string' && isMessageForUs()) {\n      logger._debug('Received postmessage :' + msg);\n      target.value = msg.substr(msgPrefixLen);\n    }else {\n      logger._debug('Received postmessage, but not for us :' + msg);\n    }\n\n  };\n\n  /**\n   * Attach postMessage listener\n   */\n  var _setupMessageListener = function () {\n    var eventMethod = window.addEventListener ? \"addEventListener\" : \"attachEvent\";\n    var eventer = window[eventMethod];\n    var messageEvent = eventMethod == \"attachEvent\" ? \"onmessage\" : \"message\";\n    eventer(messageEvent, _messageListener, false);\n  };\n\n  //Global\n  var _showValidationAlert = function () {\n    if(document.getElementById('dentifriceValidationAlert') === null) {\n\n      var iframe = document.getElementById(iframeID);\n\n      var divCheck = document.createElement('div');\n      divCheck.id = \"dentifriceValidationAlert\";\n      divCheck.textContent = _('Please validate');\n\n      iframe.parentNode.insertBefore(divCheck, iframe);\n\n      var rect = iframe.getBoundingClientRect();\n      var iframeTop = rect.top + iframe.parentNode.scrollTop;\n      var heightElement = divCheck.offsetHeight;\n      var widthElement = divCheck.offsetWidth;\n      var posTop = parseFloat(iframeTop) - parseFloat(heightElement) - 4;\n      var posLeft = parseFloat(settings.width) - parseFloat(widthElement);\n\n      divCheck.style.cssText = 'position: relative; top: -10px; left: ' + posLeft + 'px; opacity: 1;';\n\n      window.scrollTo(0, posTop -50);\n      setTimeout(function(){\n        if(divCheck.parentNode !== null) {\n          divCheck.parentNode.removeChild(divCheck);\n        }\n      }, 2000);\n\n    }\n  };\n\n  return {\n    checkIfValidated : function() {\n      if(target.value === \"\") {\n        _showValidationAlert();\n        return false;\n      } else {\n        return true;\n      }\n    },\n    settings: settings,\n\n    bootstrap : function(options) {\n      // initialize settings\n      logger._info('Initializing settings');\n      _initSettings(options);\n\n      // First check if template url was provided\n      // else, give up straight away\n      if ( !settings.templateUrl ) {\n        logger._warn('No template URL provided');\n        // Return false so we can test on the calling page\n        return false;\n      }\n\n      // Initialize language\n      logger._info('Initializing locale');\n      _initLang();\n\n      // Get the target element\n      logger._info('Getting target element');\n      target = _findTarget();\n\n      if (target) {\n\n        // Load the editor\n        logger._info('Initializing editor');\n        _initEditor.init();\n        // Listen to messages from the iframe\n        logger._info('Setting up postMessages listener');\n        _setupMessageListener();\n\n        return true;\n\n      } else {\n\n        logger._warn('Target element not found, aborting');\n        // Return false so we can test on the calling page\n        return false;\n\n      }\n    }\n  };\n\n})();\n\n/*\n* Logger Module\n*/\n\nvar logger = (function (dentifrice) {\n  /**\n   * Print messages to the console using provided level.\n   */\n  var _output = function (type, msg, enabled) {\n    if (true === enabled && 'object' === typeof window.console) {\n      console[type]('Dentifrice: ' + msg);\n    }\n  };\n  return {\n    /**\n     * Log warning messages to console.\n     * Always logged regardless of the 'log' setting.\n     */\n    _warn : function (msg) {\n      _output('warn', msg, true);\n    },\n\n    /**\n     * Log information messages to console.\n     * Only displayed if 'log' setting is true.\n     */\n    _info : function (msg) {\n        _output('info', msg, dentifrice.settings.log);\n    },\n\n    /**\n     * Log debug messages to console.\n     * Only displayed if 'debug' setting is true.\n     */\n    _debug : function (msg) {\n        _output('log', msg, dentifrice.settings.debug);\n    }\n  }\n  \n})(dentifrice || {});\n\n","// Copyright (c) 2015 Oasiswork.\n// All Rights Reserved.\n//\n// This Source Code Form is subject to the\n// terms of the Mozilla Public License, v. 2.0.\n// If a copy of the MPL was not distributed with this file,\n// You can obtain one at\n// http://mozilla.org/MPL/2.0/.\n\n/**\n * Initialize the editor\n */\nvar _initEditor = (function (dentifrice) {\n  var init = function() {\n    // Hide the target and prepare iframe\n    if (dentifrice.settings.hideTarget) {\n      target.style.display = 'none';\n    }\n\n    var assetsUrlBase = dentifrice.settings.templateUrl.replace(/\\/[^\\/]*$/, '/');\n    var absTest = /^https?:\\/\\/|^\\/\\//i;\n\n    // Prepare template URL\n    var templateUrlEncoded = encodeURIComponent(dentifrice.settings.templateUrl);\n\n    // Prepare CSS URL\n    var stylesUrlEncoded = encodeURIComponent(assetsUrlBase + dentifrice.settings.stylesUrl);\n    // If an absolute stylesUrl was provided, use it instead\n    if ( absTest.test(dentifrice.settings.stylesUrl) ) {\n        stylesUrlEncoded = encodeURIComponent(dentifrice.settings.stylesUrl);\n    }\n\n    // Prepare config URL\n    var configUrlEncoded = encodeURIComponent(assetsUrlBase + dentifrice.settings.configUrl);\n    // f an absolute configUrl was provided, use it instead\n    if ( absTest.test(dentifrice.settings.configUrl) ) {\n        configUrlEncoded = encodeURIComponent(dentifrice.settings.configUrl);\n    }\n\n    // Get our own URL to use as base for the iFrame src\n    var bootstrapRoot = '';\n    var allScripts = document.getElementsByTagName('script');\n    var re = /^(.*)dentifrice\\.(min\\.)*js$/;\n    [].forEach.call(allScripts, function (tag) {\n      var src = tag.getAttribute('src');\n      var match = re.exec(src);\n      if (match) {\n        // Found a base url to use\n        bootstrapRoot = match[1];\n      }\n    });\n\n    var editorUrl = bootstrapRoot + 'editor.html?template=' + templateUrlEncoded + '&styles=' + stylesUrlEncoded + '&config=' + configUrlEncoded + '&lang=' + lang + '&title=' + dentifrice.settings.title;\n\n    var iframe = document.createElement('iframe');\n\n    iframe.id = iframeID;\n    iframe.setAttribute('src', editorUrl);\n    iframe.style.border = '0';\n    iframe.style.width = dentifrice.settings.width + 'px';\n    iframe.style.height = dentifrice.settings.height + 'px';\n\n    if (dentifrice.settings.anchorId) {\n      var anchor = document.getElementById(dentifrice.settings.anchorId);\n      if (0 === anchor.length) {\n        logger._warn('Could not find anchor element with ID: ' + dentifrice.settings.anchorId);\n      } else {\n        logger._debug('Found anchor element with ID: ' + dentifrice.settings.anchorId);\n        if (dentifrice.settings.replaceAnchor) {\n          logger._debug('Replacing anchor element with editor');\n          anchor.parentNode.replaceChild(iframe, anchor);\n        } else {\n          logger._debug('Inserting editor inside anchor element');\n          anchor.appendChild(iframe);\n        }\n      }\n    } else {\n      target.parentNode.insertBefore(iframe, target.nextSibling);\n    }\n  }\n\n  /*\n  * Return init function\n  */\n  return {\n    init: init\n  }\n})(dentifrice || {});\n"],"sourceRoot":"/source/"}